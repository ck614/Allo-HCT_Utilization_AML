---
title: "Unknown Allo-HCT Status Check - Disparities in Allogeneic Hematopoietic Stem Cell Transplantation Among Acute Myeloid Leukemia Patients"
output: html_document
date: "2025-05-10"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Install packages
```{r}
pacman::p_load(readr, dplyr, tidyverse, table1, patchwork, 
               broom, nnet, lme4, broom.mixed, gtsummary, 
               writexl, lmerTest, readxl, openxlsx, forcats, 
               ggplot2, forestplot)
```

# Import data
```{r}
AML_raw <- read_fwf('/Users/ckck/Library/CloudStorage/Box-Box/NCDB AML 02192024/NCDB_PUF_DATA_Feb-20-2024/NCDBPUF_AMyLeuk.0.2021.0.dat',
                    na = ".",
                    fwf_positions(c(1, 38, 48, 49, 50,
                                    53, 54, 56, 57, 59,
                                    60, 61, 62, 63, 64,
                                    65, 75, 77, 79, 88, 
                                    93, 246, 300, 338, 354,
                                    362, 371, 388, 389, 967,
                                    968, 316, 351, 73), 
                                  c(37, 47, 48, 49, 52,
                                    53, 55, 56, 58, 59,
                                    60, 61, 62, 63, 64, 
                                    72, 76, 78, 82, 91, 
                                    93, 253, 307, 339, 361, 
                                    362, 372, 388, 389, 967,
                                    968, 317, 351, 74)))

colnames(AML_raw)<- c("PUF_CASE_ID", "PUF_FACILITY_ID", "FACILITY_TYPE_CD", "FACILITY_LOCATION_CD","AGE", 
                      "SEX", "RACE", "SPANISH_HISPANIC_ORIGIN", "INSURANCE_STATUS", "MED_INC_QUAR_00", 
                      "NO_HSD_QUAR_00", "UR_CD_03", "MED_INC_QUAR_12", "NO_HSD_QUAR_12", "UR_CD_13", 
                      "CROWFLY", "SEQUENCE_NUMBER", "CLASS_OF_CASE", "YEAR_OF_DIAGNOSIS", "HISTOLOGY", 
                      "PUF_MULT_SOURCE", "DX_RX_STARTED_DAYS", "DX_SYSTEMIC_STARTED_DAYS", "RX_SUMM_TRNSPLNT_ENDO", "DX_LASTCONTACT_DEATH_MONTHS", 
                      "PUF_VITAL_STATUS", "RX_HOSP_OTHER", "NO_HSD_QUAR_2016", "MED_INC_QUAR_2016", "NO_HSD_QUAR_2020", 
                      "MED_INC_QUAR_2020", "RX_SUMM_CHEMO", "RX_SUMM_TREATMENT_STATUS", "CDCC_TOTAL_BEST")

# Sample size = 177,927
```

# Data Cleaning: restrict YEAR_OF_DIAGNOSIS to 2004 - 2019
```{r}
AML <- subset(AML_raw, YEAR_OF_DIAGNOSIS <= 2019)

# 177927 - 154444 = 23483
# sample size = 154,444
```

## Restrict sample to patients from facilities (PUF_FACILITY_ID) that has continuous AML case report from 2004 to 2019
```{r}
full_year <- 2004:2019

# Summarize AML report years for each PUF_FACILITY_ID 
facility_years <- AML %>%
  group_by(PUF_FACILITY_ID) %>%
  summarize(years = list(unique(YEAR_OF_DIAGNOSIS)))

# Keep facilities that have continuous report from 2004 to 2019
valid_facility_ID <- facility_years %>%
  rowwise() %>%
  filter(all(full_year %in% years)) %>%
  pull(PUF_FACILITY_ID)

# Correlation check of Missingness & the outcome Allo-HCT
AML_missing_check <- AML %>%
  mutate(facility_missing = if_else(!(PUF_FACILITY_ID %in% valid_facility_ID), 1L, 0L))

table(AML_missing_check$facility_missing)

# Subset full dataset with facilities that have continuous AML report from 2004 to 2019
AML <- AML %>% 
  filter(PUF_FACILITY_ID %in% valid_facility_ID)
```

### Double check for filtering facilities with continuous AML report from 2004 to 2019
```{r}
AML_check <- subset(AML, select = c("PUF_FACILITY_ID", "YEAR_OF_DIAGNOSIS"))

# Create a dataset with PUF_FACILITY_ID as rows and YEAR_OF_DIAGNOSIS as columns
# if this facility has at least one AML reported in that year, then value = 1, if there is no AML case report, then value = 0 
AML_check_wide <- AML_check %>%
  distinct(PUF_FACILITY_ID, YEAR_OF_DIAGNOSIS) %>%
  mutate(value = 1) %>%
  pivot_wider(
    names_from = YEAR_OF_DIAGNOSIS,
    values_from = value,
    values_fill = 0) %>%
  relocate(PUF_FACILITY_ID, sort(as.character(2004:2019)))

# Sum up all values
AML_check_wide$count <- rowSums(AML_check_wide[ , as.character(2004:2019)])

# Retrieve PUF_FACILITY_ID with count = 18 (representing continuous AML case report from 2004 to 2019)
valid_facility_ID_check <- AML_check_wide %>%
  filter(count == 16) %>% # 2019 - 2004 + 1
  pull(PUF_FACILITY_ID)

# Check if the two filtered facility lists are equivalent
setequal(valid_facility_ID_check, valid_facility_ID) # True
```

## Data cleaning: outcome variable "transplant_cat" (Everything else is the same except this chunk)
```{r}
AML$RX_SUMM_TRNSPLNT_ENDO<- as.numeric(AML$RX_SUMM_TRNSPLNT_ENDO)

AML <- AML %>% 
  mutate(transplant = case_when(RX_SUMM_TRNSPLNT_ENDO == 0 ~ 0, 
                                RX_SUMM_TRNSPLNT_ENDO == 10 ~ 1,
                                RX_SUMM_TRNSPLNT_ENDO == 11 ~ 2,
                                RX_SUMM_TRNSPLNT_ENDO == 12 ~ 3,
                                RX_SUMM_TRNSPLNT_ENDO == 20 ~ 4,
                                RX_SUMM_TRNSPLNT_ENDO == 30 ~ 5,
                                RX_SUMM_TRNSPLNT_ENDO == 40 ~ 6,
                                RX_SUMM_TRNSPLNT_ENDO == 82 ~ 7,
                                RX_SUMM_TRNSPLNT_ENDO == 85 ~ 8,
                                RX_SUMM_TRNSPLNT_ENDO == 86 ~ 9,
                                RX_SUMM_TRNSPLNT_ENDO == 87 ~ 10,
                                RX_SUMM_TRNSPLNT_ENDO == 88 ~ 11,
                                RX_SUMM_TRNSPLNT_ENDO == 99 ~ 12)) %>%
  mutate(transplant_missing = case_when(RX_SUMM_TRNSPLNT_ENDO %in% c(0, 87, 12, 20) ~ 0,  # included in the final sample
                                        RX_SUMM_TRNSPLNT_ENDO %in% c(88, 99) ~ 1,  # unknown
                                        TRUE ~ 2)) # Other treatments
table(AML$transplant_missing, useNA = "always")

# Change into factor and add labels
AML$transplant <- factor(AML$transplant, levels = c(0:12), 
                         labels = c(
                           "0: No transplant procedure or endocrine therapy was administered as part of first course therapy", 
                           "10: A bone marrow transplant procedure was administered, but the type was not specified", 
                           "11: Bone marrow transplant - autologous", 
                           "12: Bone marrow transplant - allogeneic", 
                           "20: Stem cell harvest and infusion. Umbilical cord stem cell transplant, with blood from one or multiple umbilical cords.", 
                           "30: Endocrine surgery and/or endocrine radiation therapy",
                           "40: Combination of endocrine surgery and/or radiation with a transplant procedure. (Combination of codes 30 and 10, 11, 12, or 20)",
                           "82: Hematologic transplant and/or endocrine surgery/radiation was not recommended/administered because it was contraindicated due to patient risk factors (i.e, comorbid conditions, advanced age, progression of disease prior to administration, etc.)",
                           "85: Hematologic transplant and/or endocrine surgery/radiation was not administered because the patient died prior to planned or recommended therapy.",
                           "86: Hematologic transplant and/or endocrine surgery/radiation was not administered. It was recommended by the patient's physician, but was not administered as part of the first course of therapy. No reason was stated in patient record",
                           "87: Hematologic transplant and/or endocrine surgery/radiation was not administered. It was recommended by the patient's physician, but this treatment was refused by the patient, a patient's family member, or the patient's guardian. The refusal was noted in patient record ",
                           "88: Hematologic transplant and/or endocrine surgery/radiation was recommended, but it is unknown if it was administered",
                           "99: It is unknown whether hematologic transplant and/or endocrine surgery/radiation was recommended or administered because it is not stated in patient record."))

# Remove other categories
AML <- subset(AML, transplant_missing == 0 | transplant_missing == 1)

# Change transplant_missing to factor
AML$transplant_missing <- factor(AML$transplant_missing, 
                             levels = c(0:1), 
                             labels = c("0: Participants included in the final sample", "1: Participants excluded due to unknown Allo-HCT status"))

AML <- AML %>% relocate(c(RX_SUMM_TRNSPLNT_ENDO, transplant, transplant_missing), .after = PUF_CASE_ID) 

table(AML$transplant_missing, useNA = "always")
# 0: Participants included in the final sample = 123055    
# 1: Participants excluded due to unknown Allo-HCT status = 1435
```


## Data cleaning: HISTOLOGY
```{r}
AML$HISTOLOGY <- as.character(AML$HISTOLOGY)

AML$HISTOLOGY <- factor(AML$HISTOLOGY,
                        levels = c(9840, 9861, 9866, 9867, 9871, 
                                   9872, 9873, 9874, 9895, 9896,
                                   9897, 9898, 9910, 9911, 9920), 
                        labels = c("9840: Acute erythroid leukemia", 
                                   "9861: Acute myeloid leukemia",
                                   "9866: Acute promyelocytic leukemia with a variant RARA translocation", 
                                   "9867: Acute myelomonocytic leukaemia, NOS",
                                   "9871: Acute myeloid leukaemia with CBFB::MYH11 fusion",
                                   "9872: Acute myeloid leukaemia, minimal differentiation",
                                   "9873: Acute myeloid leukaemia without maturation",
                                   "9874: Acute myeloid leukaemia with maturation",
                                   "9895: Acute myeloid leukaemia with myelodysplasia-related changes",
                                   "9896: Acute myeloid leukaemia with RUNX1::RUNX1T1 fusion",
                                   "9897: Acute myeloid Leukaemia with KMT2A rearrangement",
                                   "9898: Myeloid leukaemia associated with Down syndrome",
                                   "9910: Acute megakaryoblastic leukaemia",
                                   "9911: Acute myeloid Leukaemia with RBM15::MRTFA fusion",
                                   "9920: Therapy-related acute myeloid leukaemia, NOS"))

# table(AML$HISTOLOGY)

# Exclude 9866: Acute promyelocytic leukemia due to: https://pmc.ncbi.nlm.nih.gov/articles/PMC8012800/
AML <- AML %>%
  filter(HISTOLOGY != "9866: Acute promyelocytic leukemia with a variant RARA translocation") %>%
  mutate(HISTOLOGY = fct_drop(HISTOLOGY))
```

## Data cleaning: FACILITY_TYPE_CD (excluded patients diagosed between 18 to 39 years)
```{r}
AML <- AML %>%
  filter(!is.na(FACILITY_TYPE_CD)) # Patients diagnosed < 40 yo were excluded because they do not have facility type information

AML$FACILITY_TYPE_CD <- as.character(AML$FACILITY_TYPE_CD)

# Create a factor for facility_type
AML$facility_type <- NA
AML$facility_type <- factor(AML$FACILITY_TYPE_CD, 
                            levels = c(1:4), 
                            labels = c("Community Cancer Program", 
                                       "Comprehensive Community Cancer Program",
                                       "Academic/Research Program (includes NCI-designated comprehensive cancer centers)", 
                                       "Integrated Network Cancer Program"))

# Relevel Academic/Research Program as the reference level
AML$facility_type <- relevel(AML$facility_type, 
                             ref = "Academic/Research Program (includes NCI-designated comprehensive cancer centers)")

# Combine "Community Cancer Program" and "Comprehensive Community Cancer Program"
AML$facility_type_cat <- NA
AML$facility_type_cat[AML$facility_type %in% c("Academic/Research Program (includes NCI-designated comprehensive cancer centers)")] <- 0
AML$facility_type_cat[AML$facility_type %in% c("Community Cancer Program", "Comprehensive Community Cancer Program")] <- 1
AML$facility_type_cat[AML$facility_type %in% c("Integrated Network Cancer Program")] <- 2

# Factorize facility_type_cat
AML$facility_type_cat <- factor(AML$facility_type_cat, 
                                levels = c(0:2), 
                                labels = c("Academic/Research Program", "Community Cancer Program", "Integrated Network Cancer Program"))

AML <- AML %>% relocate(c(facility_type, facility_type_cat), .after = FACILITY_TYPE_CD)
```

## Data cleaning: sex
```{r}
AML$sex <- NA
AML$sex[AML$SEX == 1] <- 0 # male coded as 0
AML$sex[AML$SEX == 2] <- 1 # female coded as 1

AML <- AML %>% relocate(sex, .after = SEX) 

# Change sex to factor
AML$sex<- factor(AML$sex,levels = c(0:1), labels = c("Male","Female"))
```

## Data cleaning: race/ethnicity
```{r}
AML$RACE<- as.numeric(AML$RACE)

# Non-Hispanic White
AML$race_eth_cat <- NA
AML$race_eth_cat[AML$RACE == 1 & AML$SPANISH_HISPANIC_ORIGIN == 0] <- 0 

# Non-Hispanic Black 
AML$race_eth_cat[AML$RACE == 2 & AML$SPANISH_HISPANIC_ORIGIN == 0] <- 1 

# Non-Hispanic Asian/Pacific Islander (4: Chinese, 5: Japanese, 6: Filipino, 7: Hawaiian, 8: Korean, 10: Vietnamese, 11: Laotian, 12: Hmong, 13: Kampuchean, 14: Thai, 15: Asian Indian or Pakistani, 20: Micronesian, 21: Chamorran, 22: Guamanian, 25: Polynesian, 26: Tahitian, 27: Samoan, 28: Tongan, 30: Melanesian, 31: Fiji Islander, 32: New Guinean, 96: Other Asian, 97: Pacific Islander)
AML$race_eth_cat[AML$RACE >= 4 & AML$RACE <= 97 & AML$SPANISH_HISPANIC_ORIGIN == 0] <- 2

# Hispanics
AML$race_eth_cat[AML$SPANISH_HISPANIC_ORIGIN >= 1 & AML$SPANISH_HISPANIC_ORIGIN <= 8] <- 3

# Other (including Non-Hispanic American Indian/Alaska Native (3: American Indian, Aleutian, or Eskimo)/Unknown
AML$race_eth_cat[
  (AML$RACE == 3 & AML$SPANISH_HISPANIC_ORIGIN == 0) | 
  (AML$RACE %in% c(98, 99) | AML$SPANISH_HISPANIC_ORIGIN == 9)] <- 4

AML <- AML %>% relocate(race_eth_cat, .after = SPANISH_HISPANIC_ORIGIN) 

# Change race_eth_cat to factor
AML$race_eth_cat <- factor(AML$race_eth_cat,levels = c(0:4),labels = c("NHW","NHB","NHAPI", "HIS", "Other/Unknown")) 
```

## Data cleaning: insurance
```{r}
AML$INSURANCE_STATUS <- as.character(AML$INSURANCE_STATUS)

# Collapse insurance_cat
AML <- AML %>%
  mutate(insurance_cat = case_when(INSURANCE_STATUS == 1 ~ 0, # Private
                                   INSURANCE_STATUS == 2 ~ 1, # Medicaid
                                   INSURANCE_STATUS == 3 ~ 2, # Medicare
                                   INSURANCE_STATUS == 4 | INSURANCE_STATUS == 0 | INSURANCE_STATUS == 9 ~ 3,)) %>% # Not/Other/Unknown
  relocate(insurance_cat, .after = INSURANCE_STATUS) 

# Change insurance_cat to factor
AML$insurance_cat<-factor(AML$insurance_cat, 
                          levels = c(0:3),
                          labels = c("Private", "Medicaid", "Medicare", "Not/Other/Unknown"))
```

## Data cleaning: zip-code-level education 
```{r}
# Recode education quartiles (value: 1 to 4) as "education_cat" (value 0 to 3) using census data based on year of diagnosis
AML <- AML %>%
  mutate(education_cat = case_when(
    YEAR_OF_DIAGNOSIS == 2004 ~  
      if_else(NO_HSD_QUAR_00 %in% 1:4, NO_HSD_QUAR_00 - 1, NA_real_),
    YEAR_OF_DIAGNOSIS > 2004 & YEAR_OF_DIAGNOSIS <= 2012 ~ 
      if_else(NO_HSD_QUAR_12 %in% 1:4, NO_HSD_QUAR_12 - 1, NA_real_),
    YEAR_OF_DIAGNOSIS >= 2013 & YEAR_OF_DIAGNOSIS <= 2016 ~ 
      if_else(NO_HSD_QUAR_2016 %in% 1:4, NO_HSD_QUAR_2016 - 1, NA_real_),
    YEAR_OF_DIAGNOSIS >= 2017 & YEAR_OF_DIAGNOSIS <= 2019 ~ 
      if_else(NO_HSD_QUAR_2020 %in% 1:4, NO_HSD_QUAR_2020 - 1, NA_real_),
    TRUE ~ NA_real_)) # if YEAR_OF_DIAGNOSIS is not in 2004-2019, assign NA

# Change education_cat to factor
AML$education_cat <- factor(AML$education_cat, 
                            levels = c(0:3), 
                            labels = c("Lowest Category", "Second Category", "Third Category", "Highest Category"))

AML <- AML %>% relocate(c(NO_HSD_QUAR_12, NO_HSD_QUAR_2016, NO_HSD_QUAR_2020, education_cat), .after = NO_HSD_QUAR_00) 
```

## Data cleaning: zip-code-level median household income
```{r}
# Recode income quartiles (value: 1 to 4) as "income_cat" (value 0 to 3) using census data based on year of diagnosis
AML <- AML %>%
  mutate(income_cat = case_when(
    YEAR_OF_DIAGNOSIS == 2004 ~ 
      if_else(MED_INC_QUAR_00 %in% 1:4, MED_INC_QUAR_00 - 1, NA_real_),
    YEAR_OF_DIAGNOSIS > 2004 & YEAR_OF_DIAGNOSIS <= 2012 ~ 
      if_else(MED_INC_QUAR_12 %in% 1:4, MED_INC_QUAR_12 - 1, NA_real_),
    YEAR_OF_DIAGNOSIS >= 2013 & YEAR_OF_DIAGNOSIS <= 2016 ~ 
      if_else(MED_INC_QUAR_2016 %in% 1:4, MED_INC_QUAR_2016 - 1, NA_real_),
    YEAR_OF_DIAGNOSIS >= 2017 & YEAR_OF_DIAGNOSIS <= 2019 ~ 
      if_else(MED_INC_QUAR_2020 %in% 1:4, MED_INC_QUAR_2020 - 1, NA_real_),
    TRUE ~ NA_real_)) # if YEAR_OF_DIAGNOSIS is not in 2004-2019, assign NA

# Change income_cat to factor
AML$income_cat <- factor(AML$income_cat, 
                         levels = c(0:3), 
                         labels = c("Lowest Category", "Second Category", "Third Category", "Highest Category"))

AML <- AML %>% relocate(c(MED_INC_QUAR_12, MED_INC_QUAR_2016, MED_INC_QUAR_2020, income_cat), .after = MED_INC_QUAR_00) 

# remove income_cat with NA values
AML <- AML[!is.na(AML$income_cat), ] 
```

## Data cleaning: area of residence (Rural/urban)
```{r}
# Recode area of residence (value: 1 to 9) as "rucc" (value 0 to 8) using census data based on year of diagnosis
AML <- AML %>%
  mutate(rucc = case_when(
    YEAR_OF_DIAGNOSIS >= 2004 & YEAR_OF_DIAGNOSIS <= 2008 ~ 
      if_else(UR_CD_03 %in% 1:9, UR_CD_03 - 1, NA_real_),
    YEAR_OF_DIAGNOSIS >= 2009 & YEAR_OF_DIAGNOSIS <= 2019 ~ 
      if_else(UR_CD_13 %in% 1:9, UR_CD_13 - 1, NA_real_),
    TRUE ~ NA_real_)) # if YEAR_OF_DIAGNOSIS is not in 2004-2019, assign NA

# Change rucc to factor
AML$rucc <- factor(AML$rucc, 
                   levels = c(0:8), 
                   labels = c("Counties in metro areas of ≥ 1 million", 
                              "Counties in metro areas of 250,000 to 1 million", 
                              "Counties in metro areas of <250,000", 
                              "Urban population of ≥20,000, adjacent to a metro area", 
                              "Urban population of ≥20,000, not adjacent to a metro area", 
                              "Urban population of 2,500 to 19,999, adjacent to a metro area", 
                              "Urban population of 2,500 to 19,999, not adjacent to a metro area", 
                              "Completely rural or ≤2,500 urban population, adjacent to a metro area", 
                              "Completely rural or ≤2,500 urban population, not adjacent to a metro area")) 

# Collapse rucc into 2 categories
AML <- AML %>%
  mutate(rucc_cat = case_when(rucc %in% c("Counties in metro areas of ≥ 1 million", 
                                          "Counties in metro areas of 250,000 to 1 million", 
                                          "Counties in metro areas of <250,000") ~ 0,
                              rucc %in% c("Urban population of ≥20,000, adjacent to a metro area", 
                                          "Urban population of ≥20,000, not adjacent to a metro area", 
                                          "Urban population of 2,500 to 19,999, adjacent to a metro area", 
                                          "Urban population of 2,500 to 19,999, not adjacent to a metro area", 
                                          "Completely rural or ≤2,500 urban population, adjacent to a metro area", 
                                          "Completely rural or ≤2,500 urban population, not adjacent to a metro area") ~ 1)) %>%
  relocate(c(UR_CD_13, rucc, rucc_cat), .after = UR_CD_03) 

AML$rucc_cat <- factor(AML$rucc_cat, 
                       levels = c(0:1), 
                       labels = c("Metro", "Nonmetro"))

# remove NA values
AML <- AML[!is.na(AML$rucc_cat), ]
```

## Data cleaning: age at diagnosis
```{r}
AML$AGE <- as.numeric(AML$AGE)

range(AML$AGE) # 40, 90
# This is because only patients who are 40 yo and above at diagnosis have facility type information, as shown in a preceding chunk. 

# Collapse age into 4 categories
AML <- AML %>%
  mutate(age_cat = case_when(AGE >= 40 & AGE < 50 ~ 0,
                             AGE >= 50 & AGE < 60 ~ 1, 
                             AGE >= 60 & AGE < 70 ~ 2,
                             AGE >= 70 ~ 3)) %>% 
  relocate(age_cat, .after = AGE) 

# Change age_cat to factor
AML$age_cat <- factor(AML$age_cat, 
                      levels = c(0:3), 
                      labels = c("age_4049", "age_5059", "age_6069", "age_70+"))

table(AML$race_eth_cat, useNA = "always")
```

## Data cleaning: Charlson-Deyo score
```{r}
AML$charlson_cat <- as.character(AML$CDCC_TOTAL_BEST)

# Change charlson_cat to factor
AML$charlson_cat <- factor(AML$charlson_cat, 
                           levels = c(0:3), 
                           labels = c("0: Total Charlson-Deyo Score of 0", 
                                      "1: Total Charlson-Deyo Score of 1",
                                      "2: Total Charlson-Deyo Score of 2", 
                                      "3: Total Charlson-Deyo Score of 3 or more"))

AML <- AML %>% relocate(charlson_cat, .after = CDCC_TOTAL_BEST) 
table(AML$race_eth_cat, useNA = "always")
```

# Missingness check table
```{r}
baseline_bytransplant_missing <- AML %>%
  tbl_summary(include = c(sex, race_eth_cat, 
                          insurance_cat, education_cat, income_cat,
                          rucc_cat, facility_type_cat,
                          YEAR_OF_DIAGNOSIS, age_cat, charlson_cat),
    by = transplant_missing,
    statistic = list(all_continuous() ~ "{median} ({p25}, {p75})",
                     all_categorical() ~ "{n} ({p}%)"),
    percent = "column",
    digits = list(all_categorical() ~ c(0, 1))) %>%
  add_p(pvalue_fun = function(x) style_pvalue(x, digits = 3))

# Convert to dataframe
baseline_bytransplant_missing <- as.data.frame(baseline_bytransplant_missing)

# not grouped by transplant_missing
baseline_nosep_missing <- AML %>% 
  tbl_summary(include = c(sex, race_eth_cat, 
                          insurance_cat, education_cat, income_cat,
                          rucc_cat, facility_type_cat,
                          YEAR_OF_DIAGNOSIS, age_cat, charlson_cat),  
    statistic = list(all_continuous() ~ "{median} ({p25}, {p75})",
                     all_categorical() ~ "{n} ({p}%)"),
    percent = "column",
    digits = list(all_categorical() ~ c(0, 1)))

baseline_nosep_missing <- as.data.frame(baseline_nosep_missing)

# Combine two dataframes for export
missing <- cbind(baseline_nosep_missing, baseline_bytransplant_missing)

# Remove duplicate columns
missing = missing[, -3] 
```

# Export
```{r}
write_xlsx(missing, path = "/Users/ckck/Desktop/Allo-HCT disparities/Linear model/Code versions/missing_table.xlsx")
```
